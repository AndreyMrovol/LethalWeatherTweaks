<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <AssemblyName>WeatherTweaks</AssemblyName>
        <Description>A template for Lethal Company</Description>
        <Version>0.0.1</Version>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <PropertyGroup>
        <GameDirectory>V:\Steam\steamapps\common\Lethal Company</GameDirectory>
        <LibraryDirectory>../lib</LibraryDirectory>
        <DebugLibraryDirectory>V:\LC-ModLibraries</DebugLibraryDirectory>
        <TomlFile>$(ProjectDir)../assets/libs.toml</TomlFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>

        <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="TeamBMX.LobbyCompatibility" Version="1.0.1" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="LethalCompany.GameLibs.Steam" Version="*-*" Publicize="true">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all"/>
        <PackageReference Include="BepInEx.PluginInfoProps" Version="1.*"/>
        <PackageReference Include="Lib.Harmony" Version="2.3.3" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
        <PackageReference Include="Xilophor.LethalNetworkAPI" Version="2.1.0" />

        <PackageReference Include="Evaisa.LethalLib" Version="0.16.0" />

        <PackageReference Include="mrov.WeatherRegistry" Version="*-*" Publicize="true" />
        <PackageReference Include="mrov.MrovLib" Version="*-*" />

        <PackageReference Include="IAmBatby.LethalLevelLoader" Version="*-*" />

        <PackageReference Include="MinVer" Version="4.*" PrivateAssets="all" Private="false"/>
    </ItemGroup>

    <ItemGroup>
        <Reference Include="Malfunctions" PrivateAssets="All">
            <HintPath>$(LibraryDirectory)/Malfunctions.dll</HintPath>
        </Reference>

    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all"/>
    </ItemGroup>

    <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>embedded</DebugType>
        <PathMap>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)'))=./</PathMap>
    </PropertyGroup>

    <PropertyGroup>
        <MinVerDefaultPreReleaseIdentifiers>dev</MinVerDefaultPreReleaseIdentifiers>
        <MinVerTagPrefix>v</MinVerTagPrefix>
    </PropertyGroup>

    <!-- Target to download dependencies -->
    <Target Name="DownloadDependencies" Condition="'$(Configuration)'=='Release'" BeforeTargets="BeforeBuild">
        <MakeDir Directories="$(ProjectDir)$(LibraryDirectory)" Condition="!Exists('$(ProjectDir)$(LibraryDirectory)')" />
        <Exec Command="node $(ProjectDir)../downloader.js $(TomlFile) $(LibraryDirectory)" />
    </Target>

    <Target Name="CopyLocalDependencies" AfterTargets="DownloadDependencies" Condition="'$(Configuration)'=='Release'">
        <!-- copy all files from ../assets/lib into ../lib -->

        <ItemGroup>
            <LibraryFiles Include="$(ProjectDir)../assets/lib/*" />
        </ItemGroup>

        <Copy SourceFiles="@(LibraryFiles)" DestinationFolder="$(LibraryDirectory)" />
    </Target>

    <Target Name="NetcodePatch" AfterTargets="PostBuildEvent">
        <Exec Command="netcode-patch -nv 1.5.2 &quot;$(TargetPath)&quot; @(ReferencePathWithRefAssemblies->'&quot;%(Identity)&quot;', ' ')"/>
    </Target>

    <!-- MinVer Set Mod Version from Git -->
    <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
        <PropertyGroup>
            <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
            <BepInExPluginVersion>$(PlainVersion)</BepInExPluginVersion>
        </PropertyGroup>
    </Target>

    <Target Name="SaveVersionAndNameToFiles" DependsOnTargets="SetPluginVersion">
        <WriteLinesToFile File="$(ProjectDir)dist/name.txt" Lines="$(AssemblyName)" Overwrite="true" />
        <WriteLinesToFile File="$(ProjectDir)dist/version.txt" Lines="$(PlainVersion)" Overwrite="true" />
    </Target>

    <Target Name="PackThunderstore" DependsOnTargets="NetcodePatch;SetPluginVersion;SaveVersionAndNameToFiles" AfterTargets="PostBuildEvent" Condition="$(Configuration) == 'Release'">
        <MakeDir Directories="$(ProjectDir)../assets/bundles" Condition="!Exists('$(ProjectDir)../assets/bundles')" />
        
        <Exec Command="dotnet tcli build --config-path $(ProjectDir)../assets/thunderstore.toml --package-version $(PlainVersion)" />
        <ItemGroup>
            <FilesToRename Include="$(ProjectDir)dist/*-$(PlainVersion).zip" />
        </ItemGroup>
        <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
    </Target>
    
    <Target Name="PublishThunderstore" DependsOnTargets="SetPluginVersion;SaveVersionAndNameToFiles">
        <Exec Command="dotnet tcli publish --config-path $(ProjectDir)../assets/thunderstore.toml --file $(ProjectDir)dist/*-$(MinVerVersion).zip" />
    </Target>

    <Target Name="CopyToDebugProfile" AfterTargets="NetcodePatch" Condition="'$(Configuration)' == 'Debug'">
        <Message Importance="high" Text="Copying To LibraryDir" />
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(DebugLibraryDirectory)" />
    </Target>
</Project>
